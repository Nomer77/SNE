from aiogram import types

def checkout():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    call_button = types.KeyboardButton("–í—ã–∑–≤–∞—Ç—å –º–µ–Ω—é")
    markup.add(call_button)
    return markup


def buttons_list(data: list):
    markup = types.InlineKeyboardMarkup(row_width=1)
    count = 0
    for value in data:
        button = types.InlineKeyboardButton(value, callback_data=str(count))
        markup.add(button)
        count += 1
    cancel_button = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å üö´", callback_data='-1')
    markup.add(cancel_button)
    return markup


def buttons_list_return(data: list):
    markup = types.InlineKeyboardMarkup(row_width=1)
    count = 0
    for value in data:
        button = types.InlineKeyboardButton(value, callback_data=str(count))
        markup.add(button)
        count += 1
    cancel_button = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é ‚Ü©Ô∏è", callback_data='-1')
    markup.add(cancel_button)
    return markup

def button_cancel():
    markup = types.InlineKeyboardMarkup(row_width=1)
    cancel_button = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å üö´", callback_data='-1')
    markup.add(cancel_button)
    return markup


def buttons_special_data(data: list):
    markup = types.InlineKeyboardMarkup(row_width=1)
    for value in data:
        button = types.InlineKeyboardButton(value[0], callback_data=str(value[1]))
        markup.add(button)
    cancel_button = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å üö´", callback_data='-1')
    markup.add(cancel_button)
    return markup


def button_return():
    markup = types.InlineKeyboardMarkup(row_width=1)
    return_button = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é ‚Ü©Ô∏è", callback_data='-1')
    markup.add(return_button)
    return markup

def buttons_hope():
    markup = types.InlineKeyboardMarkup(row_width=1)
    yes_button = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è üè†", callback_data=':)')
    no_button = types.InlineKeyboardButton("–ù–µ–∞", callback_data='-_-')
    markup.add(yes_button, no_button)
    return markup

# def menu_buttons():
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     custom = types.KeyboardButton("–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è")
#     tasks = types.KeyboardButton("–ó–∞–¥–∞—á–∏")
#     feedback = types.KeyboardButton("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
#     markup.add(custom, tasks, feedback)
#     return markup
#
#
# def task_button():
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     complete = types.KeyboardButton("–í—ã–ø–æ–ª–Ω–∏—Ç—å")
#     add = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á–∏")
#     edit = types.KeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
#     menu = types.KeyboardButton("–ú–µ–Ω—é")
#     markup.add(complete, add, edit, menu)
#     return markup
#
#
# def edit_task_button():
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     delete = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É")
#     edit = types.KeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É")
#     menu = types.KeyboardButton("–ú–µ–Ω—é")
#     markup.row(delete, edit).add(menu)
#     return markup
#
#
# def stop_adding_button():
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     stop = types.KeyboardButton("–°—Ç–æ–ø")
#     markup.add(stop)
#     return markup
#
#
# def cancel_button():
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     stop = types.KeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å")
#     markup.add(stop)
#     return markup
#
#
# async def choose_task(tasks, tele_id):
#     markup = types.InlineKeyboardMarkup(row_width=1)
#     for value in tasks:
#         button_task = types.InlineKeyboardButton(value[0], callback_data=await data.get_task_id(tele_id, value[0]))
#         markup.add(button_task)
#     button_cancel = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å", callback_data='0')
#     markup.add(button_cancel)
#     return markup
